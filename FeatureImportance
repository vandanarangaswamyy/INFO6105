{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "### Feature Importance - Random Forest"
      ],
      "metadata": {
        "id": "XUqu4uPVyMM4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import yfinance as yf\n",
        "from datetime import datetime\n",
        "import numpy as np\n",
        "import xgboost as xgb\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib as mpl"
      ],
      "metadata": {
        "id": "iBlwnsMzyQ5m"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.rcParams['figure.figsize'] = (16, 6)\n",
        "\n",
        "# define dataset\n",
        "start_date = datetime(2020,1,1)\n",
        "end_date = datetime(2025,1,1)\n",
        "\n",
        "stock_symbol = 'GS'\n",
        "stock = yf.download(stock_symbol, start_date, end_date)\n",
        "STOCK_raw = stock.xs(stock_symbol, axis = 1, level = 'Ticker')\n",
        "STOCK_raw.describe()\n",
        "STOCK = STOCK_raw.copy()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BtJJvp0uyUi7",
        "outputId": "7bcca8a9-0ecd-4546-b024-52f80ed57a75"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r[*********************100%***********************]  1 of 1 completed\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "DATA_raw = pd.read_csv('GS_FeatureMart_New.csv')\n",
        "DATA_raw.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 349
        },
        "id": "axNNYSFnyjeT",
        "outputId": "132f6865-f370-43aa-8a0b-a1d774a0d840"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Mkt-RF          SMB          HML          RMW          CMA  \\\n",
              "count  1258.000000  1258.000000  1258.000000  1258.000000  1258.000000   \n",
              "mean      0.052607    -0.007114    -0.001638     0.025700     0.001232   \n",
              "std       1.378205     0.833110     1.146223     0.653529     0.575492   \n",
              "min     -12.000000    -4.550000    -4.970000    -2.180000    -2.740000   \n",
              "25%      -0.530000    -0.520000    -0.660000    -0.380000    -0.330000   \n",
              "50%       0.070000    -0.020000    -0.040000     0.010000    -0.020000   \n",
              "75%       0.755000     0.450000     0.620000     0.440000     0.360000   \n",
              "max       9.340000     5.720000     6.730000     4.210000     2.520000   \n",
              "\n",
              "                RF        SP500       T10YIE      DEXUSUK      DEXUSEU  ...  \\\n",
              "count  1258.000000  1214.000000  1208.000000  1206.000000  1206.000000  ...   \n",
              "mean      0.009312  4198.032562     2.180596     1.284108     1.110020  ...   \n",
              "std       0.009191   708.144093     0.411014     0.066444     0.058172  ...   \n",
              "min       0.000000  2237.400000     0.500000     1.070300     0.961600  ...   \n",
              "25%       0.000000  3800.005000     2.137500     1.240600     1.074750  ...   \n",
              "50%       0.006000  4183.570000     2.300000     1.274950     1.095700  ...   \n",
              "75%       0.020000  4550.267500     2.390000     1.332575     1.161125  ...   \n",
              "max       0.022000  5864.670000     3.020000     1.418800     1.229500  ...   \n",
              "\n",
              "       BAMLH0A0HYM2     AMERIBOR       T10Y2Y        DGS30         EFFR  \\\n",
              "count   1246.000000  1255.000000  1208.000000  1208.000000  1213.000000   \n",
              "mean       4.191372     1.311758     0.174197     2.989536     2.376158   \n",
              "std        1.169591     1.794239     0.688597     1.158016     2.330200   \n",
              "min        2.890000     0.000000    -1.080000     0.990000     0.040000   \n",
              "25%        3.322500     0.096154    -0.410000     1.920000     0.080000   \n",
              "50%        3.890000     0.134391     0.170000     3.040000     1.580000   \n",
              "75%        4.690000     2.449060     0.702500     4.070000     5.080000   \n",
              "max       10.870000     5.392250     1.590000     5.110000     5.330000   \n",
              "\n",
              "            SMA_10       RSI_15   BBL_10_2.0   BBP_10_2.0           OBV  \n",
              "count  1248.000000  1242.000000  1248.000000  1248.000000  1.257000e+03  \n",
              "mean    320.922989    53.735077   307.677504     0.539615  2.016314e+07  \n",
              "std      95.076592    11.645103    93.522433     0.320398  3.244227e+07  \n",
              "min     133.678775    21.511343   109.699159    -0.154830 -5.531940e+07  \n",
              "25%     282.494218    46.016352   268.028414     0.269830 -4.371700e+06  \n",
              "50%     318.893596    53.375340   304.430840     0.571433  1.051520e+07  \n",
              "75%     362.272458    62.104356   348.887127     0.812368  4.898010e+07  \n",
              "max     597.972516    85.598279   593.354877     1.232384  1.039735e+08  \n",
              "\n",
              "[8 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c7cf6ee3-100e-4512-b80b-bd3702c8a8d7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mkt-RF</th>\n",
              "      <th>SMB</th>\n",
              "      <th>HML</th>\n",
              "      <th>RMW</th>\n",
              "      <th>CMA</th>\n",
              "      <th>RF</th>\n",
              "      <th>SP500</th>\n",
              "      <th>T10YIE</th>\n",
              "      <th>DEXUSUK</th>\n",
              "      <th>DEXUSEU</th>\n",
              "      <th>...</th>\n",
              "      <th>BAMLH0A0HYM2</th>\n",
              "      <th>AMERIBOR</th>\n",
              "      <th>T10Y2Y</th>\n",
              "      <th>DGS30</th>\n",
              "      <th>EFFR</th>\n",
              "      <th>SMA_10</th>\n",
              "      <th>RSI_15</th>\n",
              "      <th>BBL_10_2.0</th>\n",
              "      <th>BBP_10_2.0</th>\n",
              "      <th>OBV</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1258.000000</td>\n",
              "      <td>1258.000000</td>\n",
              "      <td>1258.000000</td>\n",
              "      <td>1258.000000</td>\n",
              "      <td>1258.000000</td>\n",
              "      <td>1258.000000</td>\n",
              "      <td>1214.000000</td>\n",
              "      <td>1208.000000</td>\n",
              "      <td>1206.000000</td>\n",
              "      <td>1206.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>1246.000000</td>\n",
              "      <td>1255.000000</td>\n",
              "      <td>1208.000000</td>\n",
              "      <td>1208.000000</td>\n",
              "      <td>1213.000000</td>\n",
              "      <td>1248.000000</td>\n",
              "      <td>1242.000000</td>\n",
              "      <td>1248.000000</td>\n",
              "      <td>1248.000000</td>\n",
              "      <td>1.257000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.052607</td>\n",
              "      <td>-0.007114</td>\n",
              "      <td>-0.001638</td>\n",
              "      <td>0.025700</td>\n",
              "      <td>0.001232</td>\n",
              "      <td>0.009312</td>\n",
              "      <td>4198.032562</td>\n",
              "      <td>2.180596</td>\n",
              "      <td>1.284108</td>\n",
              "      <td>1.110020</td>\n",
              "      <td>...</td>\n",
              "      <td>4.191372</td>\n",
              "      <td>1.311758</td>\n",
              "      <td>0.174197</td>\n",
              "      <td>2.989536</td>\n",
              "      <td>2.376158</td>\n",
              "      <td>320.922989</td>\n",
              "      <td>53.735077</td>\n",
              "      <td>307.677504</td>\n",
              "      <td>0.539615</td>\n",
              "      <td>2.016314e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.378205</td>\n",
              "      <td>0.833110</td>\n",
              "      <td>1.146223</td>\n",
              "      <td>0.653529</td>\n",
              "      <td>0.575492</td>\n",
              "      <td>0.009191</td>\n",
              "      <td>708.144093</td>\n",
              "      <td>0.411014</td>\n",
              "      <td>0.066444</td>\n",
              "      <td>0.058172</td>\n",
              "      <td>...</td>\n",
              "      <td>1.169591</td>\n",
              "      <td>1.794239</td>\n",
              "      <td>0.688597</td>\n",
              "      <td>1.158016</td>\n",
              "      <td>2.330200</td>\n",
              "      <td>95.076592</td>\n",
              "      <td>11.645103</td>\n",
              "      <td>93.522433</td>\n",
              "      <td>0.320398</td>\n",
              "      <td>3.244227e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-12.000000</td>\n",
              "      <td>-4.550000</td>\n",
              "      <td>-4.970000</td>\n",
              "      <td>-2.180000</td>\n",
              "      <td>-2.740000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2237.400000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>1.070300</td>\n",
              "      <td>0.961600</td>\n",
              "      <td>...</td>\n",
              "      <td>2.890000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-1.080000</td>\n",
              "      <td>0.990000</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>133.678775</td>\n",
              "      <td>21.511343</td>\n",
              "      <td>109.699159</td>\n",
              "      <td>-0.154830</td>\n",
              "      <td>-5.531940e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-0.530000</td>\n",
              "      <td>-0.520000</td>\n",
              "      <td>-0.660000</td>\n",
              "      <td>-0.380000</td>\n",
              "      <td>-0.330000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3800.005000</td>\n",
              "      <td>2.137500</td>\n",
              "      <td>1.240600</td>\n",
              "      <td>1.074750</td>\n",
              "      <td>...</td>\n",
              "      <td>3.322500</td>\n",
              "      <td>0.096154</td>\n",
              "      <td>-0.410000</td>\n",
              "      <td>1.920000</td>\n",
              "      <td>0.080000</td>\n",
              "      <td>282.494218</td>\n",
              "      <td>46.016352</td>\n",
              "      <td>268.028414</td>\n",
              "      <td>0.269830</td>\n",
              "      <td>-4.371700e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.070000</td>\n",
              "      <td>-0.020000</td>\n",
              "      <td>-0.040000</td>\n",
              "      <td>0.010000</td>\n",
              "      <td>-0.020000</td>\n",
              "      <td>0.006000</td>\n",
              "      <td>4183.570000</td>\n",
              "      <td>2.300000</td>\n",
              "      <td>1.274950</td>\n",
              "      <td>1.095700</td>\n",
              "      <td>...</td>\n",
              "      <td>3.890000</td>\n",
              "      <td>0.134391</td>\n",
              "      <td>0.170000</td>\n",
              "      <td>3.040000</td>\n",
              "      <td>1.580000</td>\n",
              "      <td>318.893596</td>\n",
              "      <td>53.375340</td>\n",
              "      <td>304.430840</td>\n",
              "      <td>0.571433</td>\n",
              "      <td>1.051520e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.755000</td>\n",
              "      <td>0.450000</td>\n",
              "      <td>0.620000</td>\n",
              "      <td>0.440000</td>\n",
              "      <td>0.360000</td>\n",
              "      <td>0.020000</td>\n",
              "      <td>4550.267500</td>\n",
              "      <td>2.390000</td>\n",
              "      <td>1.332575</td>\n",
              "      <td>1.161125</td>\n",
              "      <td>...</td>\n",
              "      <td>4.690000</td>\n",
              "      <td>2.449060</td>\n",
              "      <td>0.702500</td>\n",
              "      <td>4.070000</td>\n",
              "      <td>5.080000</td>\n",
              "      <td>362.272458</td>\n",
              "      <td>62.104356</td>\n",
              "      <td>348.887127</td>\n",
              "      <td>0.812368</td>\n",
              "      <td>4.898010e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>9.340000</td>\n",
              "      <td>5.720000</td>\n",
              "      <td>6.730000</td>\n",
              "      <td>4.210000</td>\n",
              "      <td>2.520000</td>\n",
              "      <td>0.022000</td>\n",
              "      <td>5864.670000</td>\n",
              "      <td>3.020000</td>\n",
              "      <td>1.418800</td>\n",
              "      <td>1.229500</td>\n",
              "      <td>...</td>\n",
              "      <td>10.870000</td>\n",
              "      <td>5.392250</td>\n",
              "      <td>1.590000</td>\n",
              "      <td>5.110000</td>\n",
              "      <td>5.330000</td>\n",
              "      <td>597.972516</td>\n",
              "      <td>85.598279</td>\n",
              "      <td>593.354877</td>\n",
              "      <td>1.232384</td>\n",
              "      <td>1.039735e+08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7cf6ee3-100e-4512-b80b-bd3702c8a8d7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c7cf6ee3-100e-4512-b80b-bd3702c8a8d7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c7cf6ee3-100e-4512-b80b-bd3702c8a8d7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-63fac8f7-0ceb-4420-94c0-d1f65fde895a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63fac8f7-0ceb-4420-94c0-d1f65fde895a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-63fac8f7-0ceb-4420-94c0-d1f65fde895a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "DATA = DATA_raw.copy()\n",
        "# NORMALIZATION\n",
        "for column in DATA_raw.columns[1:]:\n",
        "    DATA[column] = (DATA_raw[column] -\n",
        "                           DATA_raw[column].mean()) / DATA_raw[column].std()"
      ],
      "metadata": {
        "id": "ldItpmI-4QkB"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for column in STOCK_raw.columns[1:]:\n",
        "    STOCK[column] = (STOCK_raw[column] -\n",
        "                           STOCK_raw[column].mean()) / STOCK_raw[column].std()"
      ],
      "metadata": {
        "id": "YIKulu6E4W59"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "DATA.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        },
        "id": "a5Rzn0Y34xz-",
        "outputId": "8b05bb06-9930-4551-a41d-6164bd61e960"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Date    Mkt-RF       SMB       HML       RMW       CMA        RF  \\\n",
              "0  1/02/20  0.585829 -1.155772 -0.286473  0.327913 -0.384423 -0.360321   \n",
              "1  1/03/20 -0.524311  0.368636  0.001429 -0.238244 -0.193282 -0.360321   \n",
              "2  1/06/20  0.223038 -0.243528 -0.478408 -0.299451 -0.453928 -0.360321   \n",
              "3  1/07/20 -0.176031 -0.027470 -0.216679 -0.238244 -0.419175 -0.360321   \n",
              "4  1/08/20  0.302852 -0.183512 -0.574376 -0.284149 -0.314917 -0.360321   \n",
              "\n",
              "      SP500    T10YIE   DEXUSUK  ...  BAMLH0A0HYM2  AMERIBOR    T10Y2Y  \\\n",
              "0 -1.327671 -0.925993  0.431830  ...     -0.539823  0.163249  0.182695   \n",
              "1 -1.360151 -0.998983  0.376144  ...     -0.497073  0.162572  0.139128   \n",
              "2 -1.344010 -1.047644  0.484506  ...     -0.531273  0.160366  0.139128   \n",
              "3 -1.356860 -1.071974  0.430325  ...     -0.556923  0.160366  0.168172   \n",
              "4 -1.334450 -1.047644  0.404740  ...     -0.591123  0.160366  0.168172   \n",
              "\n",
              "      DGS30      EFFR  SMA_10  RSI_15  BBL_10_2.0  BBP_10_2.0       OBV  \n",
              "0 -0.569540 -0.354544     NaN     NaN         NaN         NaN -0.506341  \n",
              "1 -0.629988 -0.354544     NaN     NaN         NaN         NaN -0.576450  \n",
              "2 -0.612717 -0.354544     NaN     NaN         NaN         NaN -0.473827  \n",
              "3 -0.586811 -0.354544     NaN     NaN         NaN         NaN -0.311841  \n",
              "4 -0.552269 -0.354544     NaN     NaN         NaN         NaN -0.201963  \n",
              "\n",
              "[5 rows x 26 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ce135b8e-8d6c-4d0d-b3e8-54615f9c79f1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Mkt-RF</th>\n",
              "      <th>SMB</th>\n",
              "      <th>HML</th>\n",
              "      <th>RMW</th>\n",
              "      <th>CMA</th>\n",
              "      <th>RF</th>\n",
              "      <th>SP500</th>\n",
              "      <th>T10YIE</th>\n",
              "      <th>DEXUSUK</th>\n",
              "      <th>...</th>\n",
              "      <th>BAMLH0A0HYM2</th>\n",
              "      <th>AMERIBOR</th>\n",
              "      <th>T10Y2Y</th>\n",
              "      <th>DGS30</th>\n",
              "      <th>EFFR</th>\n",
              "      <th>SMA_10</th>\n",
              "      <th>RSI_15</th>\n",
              "      <th>BBL_10_2.0</th>\n",
              "      <th>BBP_10_2.0</th>\n",
              "      <th>OBV</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1/02/20</td>\n",
              "      <td>0.585829</td>\n",
              "      <td>-1.155772</td>\n",
              "      <td>-0.286473</td>\n",
              "      <td>0.327913</td>\n",
              "      <td>-0.384423</td>\n",
              "      <td>-0.360321</td>\n",
              "      <td>-1.327671</td>\n",
              "      <td>-0.925993</td>\n",
              "      <td>0.431830</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.539823</td>\n",
              "      <td>0.163249</td>\n",
              "      <td>0.182695</td>\n",
              "      <td>-0.569540</td>\n",
              "      <td>-0.354544</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.506341</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1/03/20</td>\n",
              "      <td>-0.524311</td>\n",
              "      <td>0.368636</td>\n",
              "      <td>0.001429</td>\n",
              "      <td>-0.238244</td>\n",
              "      <td>-0.193282</td>\n",
              "      <td>-0.360321</td>\n",
              "      <td>-1.360151</td>\n",
              "      <td>-0.998983</td>\n",
              "      <td>0.376144</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.497073</td>\n",
              "      <td>0.162572</td>\n",
              "      <td>0.139128</td>\n",
              "      <td>-0.629988</td>\n",
              "      <td>-0.354544</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.576450</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1/06/20</td>\n",
              "      <td>0.223038</td>\n",
              "      <td>-0.243528</td>\n",
              "      <td>-0.478408</td>\n",
              "      <td>-0.299451</td>\n",
              "      <td>-0.453928</td>\n",
              "      <td>-0.360321</td>\n",
              "      <td>-1.344010</td>\n",
              "      <td>-1.047644</td>\n",
              "      <td>0.484506</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.531273</td>\n",
              "      <td>0.160366</td>\n",
              "      <td>0.139128</td>\n",
              "      <td>-0.612717</td>\n",
              "      <td>-0.354544</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.473827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1/07/20</td>\n",
              "      <td>-0.176031</td>\n",
              "      <td>-0.027470</td>\n",
              "      <td>-0.216679</td>\n",
              "      <td>-0.238244</td>\n",
              "      <td>-0.419175</td>\n",
              "      <td>-0.360321</td>\n",
              "      <td>-1.356860</td>\n",
              "      <td>-1.071974</td>\n",
              "      <td>0.430325</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.556923</td>\n",
              "      <td>0.160366</td>\n",
              "      <td>0.168172</td>\n",
              "      <td>-0.586811</td>\n",
              "      <td>-0.354544</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.311841</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1/08/20</td>\n",
              "      <td>0.302852</td>\n",
              "      <td>-0.183512</td>\n",
              "      <td>-0.574376</td>\n",
              "      <td>-0.284149</td>\n",
              "      <td>-0.314917</td>\n",
              "      <td>-0.360321</td>\n",
              "      <td>-1.334450</td>\n",
              "      <td>-1.047644</td>\n",
              "      <td>0.404740</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.591123</td>\n",
              "      <td>0.160366</td>\n",
              "      <td>0.168172</td>\n",
              "      <td>-0.552269</td>\n",
              "      <td>-0.354544</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.201963</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 26 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce135b8e-8d6c-4d0d-b3e8-54615f9c79f1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ce135b8e-8d6c-4d0d-b3e8-54615f9c79f1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ce135b8e-8d6c-4d0d-b3e8-54615f9c79f1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-052a19ff-4c61-4376-be39-59c025170f6f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-052a19ff-4c61-4376-be39-59c025170f6f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-052a19ff-4c61-4376-be39-59c025170f6f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "DATA"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "DATA.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MUB8Ilpf4tfQ",
        "outputId": "53891646-6fba-498e-e4a2-ea1e9e76beda"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Date', 'Mkt-RF', 'SMB', 'HML', 'RMW', 'CMA', 'RF', 'SP500', 'T10YIE',\n",
              "       'DEXUSUK', 'DEXUSEU', 'T10Y3M', 'T5YIE', 'DBAA', 'DAAA',\n",
              "       'BAMLH0A0HYM2EY', 'BAMLH0A0HYM2', 'AMERIBOR', 'T10Y2Y', 'DGS30', 'EFFR',\n",
              "       'SMA_10', 'RSI_15', 'BBL_10_2.0', 'BBP_10_2.0', 'OBV'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = DATA.drop(columns = ['Date']).bfill()\n",
        "y = STOCK['Close']\n",
        "# y = np.diff(np.log(STOCK['Close'].values))\n",
        "# y = np.append(y[0], y)"
      ],
      "metadata": {
        "id": "TS6KUut84pBC"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# define the model\n",
        "model = RandomForestRegressor(bootstrap=True, criterion='squared_error', max_depth=None,\\\n",
        "           max_features=5, max_leaf_nodes=None,\\\n",
        "           min_impurity_decrease=0.0,\\\n",
        "           min_samples_leaf = 1, min_samples_split=2,\\\n",
        "           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,\\\n",
        "           oob_score=False, random_state=None, verbose=0, warm_start=False)"
      ],
      "metadata": {
        "id": "cJPunjUb46C3"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        },
        "id": "xZPmrVNp5DrD",
        "outputId": "990271dd-539e-4769-baca-87fe2b1109ee"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date\n",
              "2024-12-24    579.914368\n",
              "2024-12-26    578.362061\n",
              "2024-12-27    573.337036\n",
              "2024-12-30    570.719971\n",
              "2024-12-31    569.794556\n",
              "Name: Close, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2024-12-24</th>\n",
              "      <td>579.914368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-26</th>\n",
              "      <td>578.362061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-27</th>\n",
              "      <td>573.337036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-30</th>\n",
              "      <td>570.719971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-31</th>\n",
              "      <td>569.794556</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# fit the model\n",
        "model.fit(X, y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "OEE_WRvx49dU",
        "outputId": "7eac437b-ff58-4984-d262-f01b77cdef3e"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestRegressor(max_features=5)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-1 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-1 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-1 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-1 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-1 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(max_features=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>RandomForestRegressor</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(max_features=5)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 1. average feature importance\n",
        "df_feature_importance = pd.DataFrame(model.feature_importances_, index=X.columns, \\\n",
        "                                     columns=['feature importance']).sort_values('feature importance', ascending=False)\n",
        "print(df_feature_importance)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_RtNekCS6F4i",
        "outputId": "366d6daf-57fe-473b-c5de-7e2a16ac3cb2"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                feature importance\n",
            "SMA_10                    0.255344\n",
            "SP500                     0.123425\n",
            "BBL_10_2.0                0.122437\n",
            "T10YIE                    0.094515\n",
            "AMERIBOR                  0.092439\n",
            "T5YIE                     0.063876\n",
            "DGS30                     0.048183\n",
            "BAMLH0A0HYM2              0.035081\n",
            "DAAA                      0.032680\n",
            "OBV                       0.031098\n",
            "EFFR                      0.021791\n",
            "RF                        0.018042\n",
            "BAMLH0A0HYM2EY            0.016588\n",
            "T10Y3M                    0.012495\n",
            "T10Y2Y                    0.010940\n",
            "DEXUSUK                   0.006476\n",
            "DBAA                      0.005244\n",
            "RSI_15                    0.004125\n",
            "DEXUSEU                   0.003094\n",
            "BBP_10_2.0                0.001238\n",
            "Mkt-RF                    0.000278\n",
            "CMA                       0.000180\n",
            "HML                       0.000154\n",
            "RMW                       0.000152\n",
            "SMB                       0.000125\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2. all feature importance for each tree\n",
        "df_feature_all = pd.DataFrame([tree.feature_importances_ for tree in model.estimators_], columns=X.columns)\n",
        "df_feature_all.head()\n",
        "# Melted data i.e., long format\n",
        "df_feature_long = pd.melt(df_feature_all,var_name='feature name', value_name='values')\n",
        "print(df_feature_long.iloc[0:104])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tb4qTSck6QFS",
        "outputId": "0eadc0be-644a-47e2-98ab-01af985670fe"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    feature name    values\n",
            "0         Mkt-RF  0.000143\n",
            "1         Mkt-RF  0.000969\n",
            "2         Mkt-RF  0.000075\n",
            "3         Mkt-RF  0.000584\n",
            "4         Mkt-RF  0.000070\n",
            "..           ...       ...\n",
            "99        Mkt-RF  0.000416\n",
            "100          SMB  0.000108\n",
            "101          SMB  0.000100\n",
            "102          SMB  0.000218\n",
            "103          SMB  0.000118\n",
            "\n",
            "[104 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3. visualize feature importance (run each line sequentially)\n",
        "# (1) bar chart\n",
        "df_feature_importance.plot(kind='bar', color = 'lightgreen')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 432
        },
        "id": "V4VGwjtu6Vpz",
        "outputId": "dd1e749c-373a-4c14-dfed-a56c2b63a762"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 44
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABa0AAAKiCAYAAADVMfD9AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAu/xJREFUeJzs3Xt8zvX/x/HnNmZz3Jw252OOrZxyTELOhw1bSCJUyLkSomERoRwTUihkm1ii6CBJDlEhcj4fNseZww5s+/3hu+tnbWMXs+vz+Xjcb7fv7Wvv6/25Pq8Xa9eu5/X+vD9OkZGRiQIAAAAAAAAAwACcHV0AAAAAAAAAAABJCK0BAAAAAAAAAIZBaA0AAAAAAAAAMAxCawAAAAAAAACAYRBaAwAAAAAAAAAMg9AaAAAAAAAAAGAYhNYAAAAAAAAAAMMgtAYAAAAAAAAAGAahNQAAAAAAAADAMAitAQAAAAAAAACGYXdoHRsbq8DAQFWoUEHe3t5q3Lix1q9ff8/jvvnmG7388st68sknVahQIdWoUUPvvPOOIiMjU8z18fGRh4dHiv8NHjzY3nIBAAAAAAAAACbiFBkZmWjPAT179lRYWJj69OmjMmXKaMmSJfrzzz+1atUq1alTJ83jSpcuLW9vb7Vq1UrFihXTnj179Pnnn6tkyZLasGGD3N3dbXOTQut+/fole46yZcuqevXqdrYIAAAAAAAAADALu0LrHTt2qHHjxgoKClL//v0lSTExMapTp44KFCigdevWpXnsxo0bVb9+/WRjS5cuVZ8+fTR9+nS99NJLtnEfHx9VqlRJy5Yts7cfAAAAAAAAAICJ2bU9SFhYmFxcXNStWzfbmJubm7p27apt27bp1KlTaR7738Baklq3bi1J2r9/f6rHxMXF6fr16/aUCAAAAAAAAAAwMbtC6127dqls2bLKnTt3svGkLTt2795t18nPnTsnScqXL1+Kx3799VcVKlRIRYoUkY+Pj2bPnm3XcwMAAAAAAAAAzCeLPZMjIiLk5eWVYjxpLDw83K6TT506VS4uLvL19U02XrlyZdWpU0dly5bVpUuXtGTJEg0fPlzh4eEaM2ZMup47JibGrlrux82bN3X+/HkVKFBAWbNmfejny0xW7k2iPzOzcm8S/ZmZlXuT6M/MrNybRH9mZuXeJPozMyv3JtGfmVm5N4n+zM7K/Vm5Nylz+3Nzc0v3XLv2tK5SpYoee+wxhYSEJBs/duyYqlSpovHjx6tv377peq6QkBC98sorGjhw4D2D6MTERPn7+2vDhg3auXOnihQpcs/nP3LkiOLj49NVCwAAAAAAAADg4XBxcVHp0qXTPd+uldbu7u6KjY1NMZ60qtnd3T1dz/P777+rf//+aty4sUaNGnXP+U5OTurbt69++ukn/fbbb+rYseM9jylcuHC6ankQcXFxttXnrq6uD/18mcnKvUn0Z2ZW7k2iPzOzcm8S/ZmZlXuT6M/MrNybRH9mZuXeJPozMyv3JtGf2Vm5Pyv3Jhm3P7tCay8vL509ezbFeEREhCTJ29v7ns+xe/dude7cWRUrVtTChQuVJUv6SkhaXX358uV0zbdnufmDcnV1zdTzZSYr9ybRn5lZuTeJ/szMyr1J9GdmVu5Noj8zs3JvEv2ZmZV7k+jPzKzcm0R/Zmfl/qzcm2S8/uy6EaOPj48OHTqkqKioZOPbt2+3PX43R48elb+/vwoUKKCQkBDlzJkz3ec+duyYJCl//vz2lAwAAAAAAAAAMBG7QmtfX1/Fx8dr4cKFtrHY2FgtXrxYNWrUUNGiRSVJJ0+e1IEDB5IdGxERoXbt2snZ2VnLly9PM3y+fPlyir2ob968qalTp8rV1VX169e3p2QAAAAAAAAAgInYtT1IjRo15OfnpzFjxuj8+fMqXbq0li5dqhMnTmjGjBm2eb1799amTZsUGRlpG+vQoYOOHTumgQMHasuWLdqyZYvtsYIFC6phw4aSpDVr1mjy5Mny9fVViRIldPnyZYWGhmrv3r1699135eXl9YAtAwAAAAAA4FGSkJCgqKgo3bx502Hnd3V11ZUrV3T16lWH1PAwWbk/K/cmZVx/Tk5Oyp07d4bti21XaC1Jn3zyicaNG6dly5YpMjJSlStX1rJly1SvXr27HvfPP/9IkqZNm5bisXr16tlC68qVK6t8+fIKDg7WhQsX5OrqKh8fHy1YsEB+fn72lgsAAAAAAIBHWFxcnCIjI5UnTx7lyZNHTk5OmV5DQkKC4uLi5OrqKmdnuzY+MAUr92fl3qSM6y8hIUEXL15Unjx5MiS4tju0dnNzU1BQkIKCgtKcs3r16hRjd666vpsqVaroq6++srcsAAAAAAAAIIWrV68qX758cnFxcXQpgGU5OzsrX758unTpUobck9B6Hw8AAAAAAAAA/5OQkEBgDWQCZ2dnJSYmZsxzZcizAAAAAAAAAACQAQitAQAAAAAAAACGQWgNAAAAAAAAADAMQmsAAAAAAADApP788081bdpUhQsXloeHh3bt2uXokjLV8ePH5eHhocWLFzu6FGSgLI4uAAAAAAAAAID9bt68qW7dusnNzU3jx4+Xu7u7ihcvnuHnOXv2rBYsWKBWrVrpiSeeyPDnf9R9+umncnd3V5cuXRxdimEQWgMAAAAAAOCRtCBhQeadzPV//5+QfLi7c/f7fsqjR4/q5MmTmj59ul566aX7fp57CQ8P18SJE1W8eHHDhdbFixdXeHi4smbN6uhS7tv8+fOVN29eQus7sD0IAAAAAAAAYELnz5+XJOXJk8fBldyfmJgYJSQk3HviXTg5OcnNzU0uLi4ZVFXmuXHjhqNLMCxCawAAAAAAAMBk+vTpo1atWkmSunXrJg8PD9vXknTgwAG99NJLKlmypLy8vPTss89qzZo1yZ7j8uXLGjlypOrWrasiRYqoWLFi8vf31+7du21zNm7cqIYNG0qSXn/9dXl4eCTbQ9rHx0evv/56ivpatWqVrJ6NGzfKw8NDy5cv13vvvaeKFSuqUKFCioqKkiRt375dHTp0UPHixVWoUCG1bNlSW7ZsueffQ2p7Wvfp00dFihTRyZMn1bFjRxUpUkQVK1bUvHnzJEl79uxRmzZtVLhwYT3++OMKCQlJ9pyLFy+Wh4eHNm3apMGDB6tixYoqXry4XnvtNUVGRqao4dNPP1Xt2rVVsGBBVahQQW+++WaKea1atVKdOnX0999/q0WLFipUqJDGjh0rHx8f/fvvv9q0aZPt7zbp7y09/z53/t2uWLFCkydPVqVKleTl5aW2bdvqyJEjKerdvn27AgICVKJECRUtWlQNGzbUJ598kmxOer5/Hia2BwEAAAAAAABM5uWXX1bhwoU1ZcoUvfbaa6pWrZoKFiwoSfr333/VrFkzFS5cWIMHD1b27Nm1YsUKdenSRYsWLVKbNm0kSceOHdPq1avl5+enEiVK6Ny5c7a9q7du3apChQqpfPnyGjFihMaPH6/u3burTp06kqRatWrdV92TJk1S1qxZ1a9fP8XFxcnV1VUbNmxQQECAqlSpoqFDh8rZ2VmLFy9W27Zt9d1336l69ep2nyc+Pl4BAQGqW7euxowZo5CQEL311lvKnj273nvvPQUEBKhNmzb6/PPP1bt3bz311FMqWbJksud46623lCdPHr3xxhs6duyYPvvsM508eVKrV6+Wk5OTJOn999/XxIkT9eyzz6pHjx46ePCgPvvsM/35559au3Ztsm1LLl26JH9/f7Vv314dO3ZUgQIF9PTTT+vtt99Wjhw59MYbb0iS7d8xPf8+d/roo4/k7Oysfv36KSoqStOnT9crr7yin376yTZn/fr16tixo7y8vNS7d28VLFhQ//77r9auXau+fftKSv/3z8NEaA0AAAAAAACYTM2aNRUbG6spU6aobt268vX1tT02bNgwFS1aVOvXr1e2bNkkSb169VLz5s01evRoW+hYqVIl7dixQ87O/78ZQ8eOHVWzZk198cUXGjp0qAoWLKgmTZpo/Pjxeuqpp9SxY8cHqjsmJkbr16+Xu7u7JCkxMVFDhgxR/fr1FRoaaguDX375ZdWuXVvvvfeeVqxYcV/nef755zVkyBBJkr+/vypWrKh+/fpp/vz5at++vSSpYcOGeuqpp7R06VINHz482XO4urpq5cqVSkxMlKurq4oXL653331X3333nVq2bKkLFy7oo48+UqNGjRQaGmr7eyxXrpzeeustLVu2TC+++KLt+SIiIvTRRx/p5ZdfTnaecePGKW/evCn+btPz73On2NhYbdy4Ua6utzdQ9/Dw0LBhw7R3715VqlRJ8fHxGjRokLy8vGyrsxMSEhQXF5csXE/v98/DxPYgAAAAAAAAgEVcvnxZv/76q9q1a6dr167p4sWLunjxoi5duqRGjRrp8OHDOnPmjCQpW7ZstkA0Pj5ely5dUs6cOVW2bFnt3LnzodTXuXNnW2AtSbt27dLhw4fl7++vS5cu2eq9ceOGGjRooN9///2+972+8+aUHh4eKlu2rHLkyKF27drZxh977DHlyZNHx44dS3F89+7dk4W5PXr0UJYsWfTDDz9Ikn755RfFxcWpT58+yYLlbt26KXfu3Fq3bl2y58uWLZtdN1u099+nS5cutsBakm1VfFJvu3bt0vHjx9WnTx95eHgkOzbpwwJ7vn8eJlZa/8993S3WVVKZ//3Zjv92HuSusAAAAAAAAEBajhw5osTERI0bN07jxo1Ldc758+dVuHBhJSQkaPbs2Zo/f76OHz+u+Ph425y8efM+lPpKlCiRol7p9j7UaYmK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VqyYo0uxS0JCgpyd7bqQxxSefPJJffjhh8le7wAAwKPBqr/fAABgVHaH1kjdwYMHNXXqVM2aNcvRpaTLG2+8oRdffFFVq1aVJN28eVPffvut6tevn2zVuyT98ssvmjJlilatWuWIUgFLKVSokGbNmqX27dtLun0VSo8ePRQYGKjHH3882dzg4GD17t1bly5dckSp9618+fJq3769AgICVK1aNUeXk2Hq1q2rffv2qX379nr//fdVoEABR5cEO0VERMjLy8vRZQAPbO/evapUqZKjywAeCX/++aeCg4O1YsUK7d+/39Hl2CUyMlIeHh7pnr98+XJ16NDh4RWER17dunXtmu/k5KRNmzY9pGoAGB0fFafDhQsXtH37dh06dCjFYzt27NCLL76o2rVrKzg42AHV3Z/PPvssWT9Xr15Vz549tWfPnhRzz507xwuFCVy/fl2HDx/WP//8o8OHD+v69euOLilD3bx5U1FRUbp586ajS3kgMTExio+Pt3198+ZN/fjjj7p48aIDq8pYJUuW1Jw5c/Tcc8+pevXqmjhxoo4cOeLosh7Yxo0bNXr0aH3//feqWbOmFi1a5OiSYKeaNWvq888/d3QZDpGYmKhr1645uowMZ5XXhvQ4ffq0pk+frqefflpPP/20o8t5aD788EMVLFjQ0WVkmKSrpmAuR44c0YQJE1SjRg0999xzmj9/vsqVK+fosuzm5+enK1eupGvu/Pnz9dprrz3kijLOoUOHLPm6lqR58+YaM2aMvv/++xRXsJvZv//+q2PHjsnDw0N58+a95/88PT0dXfJDdfHiRc2dO9fRZeABmDkru3nzpv7991+tX79ea9as0fr16/Xvv/8a6vfqLI4uwMhiY2PVv39/LV++XImJtxekV6pUSYsXL5a7u7sGDRqk77//Xu7u7urRo4def/11B1f8YJJ6tJorV65o3bp12rVrl8LDw2370np7e8vHx0dNmza1awWCkURGRmrmzJlasWKFjh49muLxkiVLql27dnr99deVN29eB1R4/27duqUlS5ZoxYoV2rVrly5fvmx7zNPTUz4+PmrXrp1eeOEFZc2a1YGV4r/Wrl2rEydOKDQ0VKGhoZowYYImTpyoqlWr6vnnn1f79u1NuUrZxcVFAwYMULt27TR06FANHDhQX331laZOnWrKN7Lpcf36dWXPnj3NrbkuXLig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qT5+6tQptW/fXuHh4fLz89OXX35pqje4/5WQkKCwsDD98ssvunz5svLnz6/nnntOLVu2dHRpdqlQoYLef//9dF/Cb1arV69W7969de3aNRUvXjzFVSonTpxQjhw5NGfOHLVq1crR5dolISHBdgPbLFmyWOoGttL/B9D2BExm+tmyZMkSjR8/XmfOnFH27NnVtm1bBQYGysvLK9k8K6zUtYcZXveqVKmijh07avjw4ak+vnv3bvn7+ytLlix6/vnnNW3aNEv++509e1Zff/21Xn/9dUeXAj0awWdazLDI426s/GEKrOnKlSsKCwtTSEiINm/erNy5c2vy5Mlp7kdrRHv27En3PWKs7Pjx47Z7WRw6dMiSv6+YVYUKFTRp0iS1adNG0u0gd/ny5WrcuLFpt1+9008//aSvv/5aY8eOTbbt0IEDB9S5c2cdPXrUNta6dWt99tlnDv1wjND6EfX111+b6sUts5nhzXu/fv20adMm/fXXX2nOuXz5svz9/fXnn3+a6rKcWrVqaezYsWrWrJmk2ysi/f39bZ9I582bVxcvXpQkNWnSREuWLDHNlQJXrlxRnjx5HF3GQ7Vv3z41aNBAJUuW1EcffZTqvrm///67hgwZomPHjumXX35RhQoVHFDpgzl69KgaN26syMjIFI+Z9Qa2kjRhwgS7jzHL6pANGzbIz89P5cqVU5MmTRQREaFvv/1W7u7uWrRokZ5++mnbXEJr4+nRo4cOHDig3377Lc05R48eVbt27WyrC63y7xcdHa3r169b7soOK3iUg08z/NxA2i5evKgffvjBtqKuRYsWrLg2gaSto2bOnKnNmzdr2LBhptqDt0CBAo/cPWLuZefOnab84C81Vvi54unpqblz59p2U7h06ZLKli1r6KsR7fHyyy/ryJEj2rBhQ7LxBg0aaNeuXercubOqVq2qH374QT/++KOCgoIculDCmteSZKCYmBht3bpVLi4uql27trJkyaJLly7po48+0u+//67r16/Lx8dHAwcO1OOPP+7octPtzsD65s2bOnTokMLDwxUdHS13d3d5e3urbNmyprxb76MiICBAe/bs0ebNm9PcHN/T01OrVq1Sr1699M8//2RyhffvwIEDioqKsn09evRobdmyRaNGjVLfvn3l5uama9eu6YMPPtCMGTM0c+ZMDRw40IEVp19agXVsbKz+/vtv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TBAEdO7cGcnJyThz5gxOnz4tmeNOiIiIiIiIdBVXWhMREZGKu7s7srOzkZCQACsrK0ybNg2bN2+Gk5MTIiMjIQgCgMdHhQwYMEC1Ullq8vLyEB8fD6VSiSNHjsDCwgJDhw6Fl5cX+vbtq/p3EhERERERkfYZiB2AiIiI6o7k5GT4+vrCysoKABAYGIj79+9j5MiRaoVcQ0NDeHt749KlSyIlrb7i4mLExsZizJgxaN++PT799FNYWlpi48aNuHDhAlatWgVnZ2cWrImIiIiIiETG40GIiIhIJSsrC02aNFE9Lm9KWFlzQmtra9y/f19r2V5Wu3btUFRUBGdnZ6xcuRLu7u4wNzcXOxYRERERERE9hUVrIiIiUvPkSmNdWnV87949GBoaIjExEYmJifjss8+qHC8IAq5fv66ldERERERERFSORWsiIiJSc/36dSQlJQF4fPYzAFy9ehWWlpZq465du6btaC/Fx8dH7AhERERERESkATZiJCIiIhWZTFZhdXVZWVmlK67Lr+fk5GgrHhEREREREekBrrQmIiIildWrV4sdoU7Izs5GVFQUJkyYIHYUIiIiIiIivcOV1kREREQACgsLsW3bNigUChw4cAAlJSVcRU5ERERERCQCrrQmIiIivVVaWoq9e/dCoVAgISEBhYWFaNOmDQIDAzF48GCx4xEREREREeklFq2JiIhI7xw7dgxyuRwxMTHIzs6Gra0tCgsLsXLlSowdO1bseERERERERHqNRWsiIiLSC5cuXYJcLodSqURqaipat24NPz8/eHp6wsTEBA4ODrCyshI7JhERERERkd5j0ZqIiIj0gqOjI2xsbODp6YkRI0bA3t5e9VxKSoqIyYiIiIiIiOhJBmIHICIiItIGIyMj3LlzB2lpaUhPT0dxcbHYkYiIiIiIiKgSLFoTERGRXrh48SJCQkKQlZUFf39/tGvXDoGBgdizZw8ePnwodjwiIiIiIiL6H+HOnTtlYocgIiIi0qb09HQolUooFAqcO3cOFhYWKCgowNy5cxEUFARjY2OxIxIREREREektFq2JiIhIr505cwZyuRzR0dG4ceMGLCws0K9fP7i5ucHX11fseERERERERHqHRWsiIiKi/zl8+DDkcjni4+ORl5eHnJwcsSMRERERERHpHRatiYiISO+VlJTgypUrKCgoQPv27WFsbIydO3fC3d1d7GhERERERER6x1DsAERERETasmvXLiiVShgaGmLUqFFwdnbG1q1bMXPmTGRmZgIAjI2N8fHHHyM4OFjktERERERERPqJK62JiIhIL+zZswfe3t4wMjKCqakpCgsLER4ejqCgINjZ2cHJyQklJSXYt28fUlJS8O2338LPz0/s2ERERERERHqHRWsiIiLSC+7u7sjOzkZCQgKsrKwwbdo0bN68GU5OToiMjIQgCAAeHxUyYMAAlJWV4eDBgyKnJiIiIiIi0j8GYgcgIiIi0obk5GT4+vrCysoKABAYGIj79+9j5MiRqoI1ABgaGsLb2xuXLl0SKSkREREREZF+Y9GaiIiI9EJWVhaaNGmiemxtba3255Osra1x//59rWUjIiIiIiKi/8OiNREREemNJ1dUP/l3IiIiIiIiqjsMxQ5AREREpC3Xr19HUlISACAvLw8AcPXqVVhaWqqNu3btmrajERERERER0f+wESMRERHpBZlMVmF1dVlZWaUrrsuv5+TkaCseERERERER/Q9XWhMREZFeWL16tdgRiIiIiIiISANcaU1EREREREREREREdQYbMRIRERERERERERFRncGiNRERERERERERERHVGSxaExEREREREREREVGdwaI1EREREREREREREdUZLFoTERERERERERERUZ3BojURERERERERERER1RksWhMRERERERERERFRncGiNRERERERERERERHVGf8fw3bN+4hamCcAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# (2) box plot\n",
        "sns.boxplot(x=\"feature name\", y=\"values\", data=df_feature_long, order=df_feature_importance.index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "8R0bMUP46d11",
        "outputId": "53ffdaf6-59d5-4e0a-e4a8-4fc8e67100d8"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='feature name', ylabel='values'>"
            ]
          },
          "metadata": {},
          "execution_count": 33
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# (3) strip plot\n",
        "sns.stripplot(x=\"feature name\", y=\"values\", data=df_feature_long, order=df_feature_importance.index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "0HC0KsmA7OLZ",
        "outputId": "28978665-0a13-48bd-92d9-5b65a44dfcd4"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='feature name', ylabel='values'>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0ilYhRX37bX0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Feature Importance - XGBoost"
      ],
      "metadata": {
        "id": "tC1b07XZ7a9X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "min_cols = 3\n",
        "model = xgb.XGBRegressor(objective ='reg:squarederror',\n",
        "                         n_estimators=20,\n",
        "                          learning_rate = 0.05,\n",
        "                          max_depth = min_cols,\n",
        "                          alpha = 10,\n",
        "                          eta=0.1,\n",
        "                          subsample = 0.7,\n",
        "                          colsample_bytree=0.8,\n",
        "                          reg_lambda=1,\n",
        "                          gamma=0)\n",
        "# fit the model\n",
        "model.fit(X, y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "id": "W3pv3bGt7jBZ",
        "outputId": "887da5cd-31fe-4739-bc49-00a70af7d2d7"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "XGBRegressor(alpha=10, base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=0.8, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eta=0.1, eval_metric=None,\n",
              "             feature_types=None, gamma=0, grow_policy=None,\n",
              "             importance_type=None, interaction_constraints=None,\n",
              "             learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
              "             max_cat_to_onehot=None, max_delta_step=None, max_depth=3,\n",
              "             max_leaves=None, min_child_weight=None, missing=nan,\n",
              "             monotone_constraints=None, multi_strategy=None, n_estimators=20,\n",
              "             n_jobs=None, ...)"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-2 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-2 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-2 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-2 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-2 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(alpha=10, base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=0.8, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eta=0.1, eval_metric=None,\n",
              "             feature_types=None, gamma=0, grow_policy=None,\n",
              "             importance_type=None, interaction_constraints=None,\n",
              "             learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
              "             max_cat_to_onehot=None, max_delta_step=None, max_depth=3,\n",
              "             max_leaves=None, min_child_weight=None, missing=nan,\n",
              "             monotone_constraints=None, multi_strategy=None, n_estimators=20,\n",
              "             n_jobs=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>XGBRegressor</div></div><div><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(alpha=10, base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=0.8, device=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eta=0.1, eval_metric=None,\n",
              "             feature_types=None, gamma=0, grow_policy=None,\n",
              "             importance_type=None, interaction_constraints=None,\n",
              "             learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
              "             max_cat_to_onehot=None, max_delta_step=None, max_depth=3,\n",
              "             max_leaves=None, min_child_weight=None, missing=nan,\n",
              "             monotone_constraints=None, multi_strategy=None, n_estimators=20,\n",
              "             n_jobs=None, ...)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 1. average feature importance\n",
        "df_feature_importance = pd.DataFrame(model.feature_importances_, index=X.columns, \\\n",
        "                                     columns=['feature importance']).sort_values('feature importance', ascending=False)\n",
        "print(df_feature_importance)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UMzYqo3i8HlM",
        "outputId": "20449e5c-e886-42b4-db4c-cd44f11566d6"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                feature importance\n",
            "AMERIBOR                  0.239520\n",
            "T10YIE                    0.235083\n",
            "SMA_10                    0.165371\n",
            "BBL_10_2.0                0.159442\n",
            "SP500                     0.107633\n",
            "T5YIE                     0.030860\n",
            "OBV                       0.016123\n",
            "T10Y2Y                    0.015691\n",
            "BAMLH0A0HYM2              0.011874\n",
            "BAMLH0A0HYM2EY            0.011155\n",
            "RSI_15                    0.003356\n",
            "BBP_10_2.0                0.002674\n",
            "DBAA                      0.001217\n",
            "HML                       0.000000\n",
            "SMB                       0.000000\n",
            "Mkt-RF                    0.000000\n",
            "CMA                       0.000000\n",
            "DEXUSUK                   0.000000\n",
            "RF                        0.000000\n",
            "RMW                       0.000000\n",
            "T10Y3M                    0.000000\n",
            "DAAA                      0.000000\n",
            "DEXUSEU                   0.000000\n",
            "EFFR                      0.000000\n",
            "DGS30                     0.000000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2. visualize feature importance (run each line sequentially)\n",
        "# (1) bar chart\n",
        "df_feature_importance.plot(kind='bar', color = 'orange')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 432
        },
        "id": "KsfSpVPX8MyY",
        "outputId": "c8da4233-4d61-4382-ef48-a9fe1129820c"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 46
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# exhaustively search for the optimal hyperparameters\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "# set up our search grid\n",
        "param_grid = {\"max_depth\":    [3, 5, 10],\n",
        "              \"n_estimators\": [10, 50, 100],\n",
        "              \"learning_rate\": [0.15, 0.3]}\n",
        "\n",
        "regressor = xgb.XGBRegressor(eval_metric='rmsle')\n",
        "search = GridSearchCV(regressor, param_grid, cv=5).fit(X, y)\n",
        "\n",
        "print(\"The best hyperparameters are \",search.best_params_)\n",
        "regressor = xgb.XGBRegressor(learning_rate = search.best_params_[\"learning_rate\"],\n",
        "                           n_estimators  = search.best_params_[\"n_estimators\"],\n",
        "                           max_depth     = search.best_params_[\"max_depth\"],)\n",
        "\n",
        "regressor.fit(X, y)\n",
        "\n",
        "\n",
        "from xgboost import plot_importance\n",
        "import matplotlib.pyplot as plt\n",
        "plt.style.use('fivethirtyeight')\n",
        "plt.rcParams.update({'font.size': 12})\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(12,6))\n",
        "plot_importance(regressor, max_num_features=8, ax=ax)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "WOi5KQbG8Wvq",
        "outputId": "d16a195a-793b-495f-cc2f-d9b8e53e31a6"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The best hyperparameters are  {'learning_rate': 0.15, 'max_depth': 10, 'n_estimators': 100}\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABKYAAAJECAYAAAAsQixVAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAkRRJREFUeJzs3XdcV+X///EnQwQHIiJLwY07FRwpuSUXpObOcmSuTM3KWdoWyZHmzrQPmZri3kkfx8c9SnOlJZmCAyeiIKLA7w9/vL++ewOCoMfxuN9u3j6+r3Od67zOG0/6eZ7rXMcqJiYmRQAAAAAAAMBjZm10AQAAAAAAAHg+EUwBAAAAAADAEARTAAAAAAAAMATBFAAAAAAAAAxBMAUAAAAAAABDEEwBAAAAAADAEARTAAAAAAAAMATBFAAAAAAAAAxBMAUAAAAAAABDEEwBAAA8h7Zt2yYnJydVrlzZ6FIAAMBzjGAKAAA8Vv369ZOTk9MDf02fPt3QOtesWaPg4GBt27bN0DrweG3btk3BwcFas2aN0aUAAPBcsDW6AAAA8HzKlSuXChYsmO72vHnzPsZqLK1du1YLFy6UJNWtW9fQWh6FPHnyqEyZMvLw8DC6lCfK9u3bFRISos6dOyswMNDocgAAeOYRTAEAAEPUrFlTa9euNbqM55afn5/27dtndBkAAOA5x6N8AAAAAAAAMATBFAAAeCokJyfrp59+UuvWrVWqVCkVLlxY5cqVU48ePbR///4090lKSlJ4eLjeffdd1a9fX2XKlDHt16VLF23dutVin9RFwVMf4wsJCbFY/yrV/Pnz5eTkpJYtW6Zbd3BwsJycnNSvXz+z9tOnT5uNt2/fPnXt2lVly5aVs7Ozhg8fbtF/yJAhql69ujw8PFS0aFHVr19fkyZNUlxcXGa+wjTPM63Fz1u2bCknJyfNnz9fsbGxGj16tKpWrSp3d3dVqVJFX375pRISEkz9t27dqldffVUlS5aUp6enmjdvrp07dz7w+0hOTta0adPk7+8vT09PlShRQp06ddKvv/6aYe2xsbEKDg6Wv7+/ihQpoiJFiqhOnToaM2aMrl+/nqnjfvvtt2rUqJG8vb3l5OSkQ4cOycnJSSEhIZKkhQsXWvzcT58+bRrv5MmTCgkJUVBQkF544QW5ubnJ29tbTZo00ZQpU3Tr1q006/j3n5n169crMDBQ3t7eKlKkiJo0aaIlS5ZkeP4pKSlatmyZOnToIB8fH7m6uqp8+fJq3ry5pk2bpqtXr6a5365du/Tmm2+qQoUKcnV1VYkSJdSqVSstWbJEKSkpGR4TAIBHhUf5AADAE+/GjRt64403tGXLFkmSlZWV8ufPrwsXLmj58uVauXKlxo4dq969e5vtd+LECbVv39702dHRUXZ2drpw4YLWrl2rtWvXavTo0XrvvfdMfezs7OTq6qrY2FglJCQob968j3y9q2XLlql37966e/euHB0dZWNjY7Z91apV6t27tykMypMnj27fvq3ff/9dv//+uxYvXqwVK1bI1dU1R+uKiYlR48aN9ddffylv3rxKSkrS6dOnNW7cOB0+fFg//fSTvvvuOw0ZMkRWVlbKly+f4uPjtWvXLrVu3VqrVq3Siy++mObYKSkp6tq1q9asWSNbW1vlyZNH165d04YNGxQeHq7Zs2fr1Vdftdjv77//VqtWrRQZGWn6LiTp2LFjOnbsmBYsWKCVK1eqVKlS6R739ddf17p162RjY6N8+fJJkm7evClXV1fFxcUpLi5O9vb2cnR0NNv3/p/LW2+9pYMHD0qS7O3tlSdPHsXExGj//v3av3+/li1bplWrVil//vzpfr9fffWVxowZI2tra+XLl09xcXHav3+/3nrrLV28eFFvv/22xT7Xr19Xt27dzK6FAgUK6Nq1azp//rx27dolJycndenSxWy/jz/+WJMnTzZ9dnR0VExMjLZu3aqtW7dq/fr1mj17tqytuW8NAHi8+JsHAAA88fr27astW7aoSpUqWrZsmc6fP68zZ87on3/+0UcffSQbGxsNHz5cu3fvNtvPzs5Or7/+upYtW6YzZ87ozJkzOnv2rP766y99+OGHsrGx0eeff24246pWrVr6888/1aZNG0nSO++8oz///NPsV04bOHCgWrRood9//11nzpzR+fPnTTOsfvvtN/Xs2VN3797VBx98oGPHjuncuXO6cOGCNm7cqGrVqunYsWPq27dvjteVOnto/fr1Onv2rM6ePatvvvlGtra22rBhg7766iuNGDFCgwcP1t9//60zZ87o0KFDqlmzphITEzVy5Mh0x163bp3Wr1+vL7/8UpGRkTpz5owOHDighg0bKikpSf3799epU6fM9klMTNQbb7yhyMhIFS1aVMuXLzfVtXLlShUt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589rxYoVSkpKUmJi4gNruXXrVpqP6qW23bp1K4tnBwAAgKdFjgRT69evV1hYmE6cOKH4+HjTehInTpzQhg0b1L59e7MFwZ8VsbGxunLlihISErR//36FhIQod+7catq0qaR7d3o7deqkn376SRUqVNBLL72kWrVqqWnTpvLx8XmstdrZ2emVV15RQECAChUqpBMnTmjKlClq3ry5fv75Z1WpUuWx1gMAePwSEhIkSStWrNDgwYO1Y8cO09/PL7/8su7cuaOPP/5YgYGBcnZ2Ntt3wYIFku4tfp46zr95e3vL29tbktSmTRt17NhRHTp00Pr162VlZZVuXfb29oqPj7cYN3UtLBsbm3SPmRp8ZSYAA5A5XFdAzuKawvMoKwv9ZyuYSklJUb9+/bR48WJJkoODg9ldTScnJ3322WdKSUnRu+++m51DPZH+vVaTt7e3vv32WxUpUsTUNn36dPn5+enHH3/UmjVrtGbNGo0aNUr16tXTzJkzH1tgV6tWLbNHClu0aKFWrVrJ399fn332mZYuXfpY6gAAGCcyMlLSvfUJy5Qpo6SkJFObJPn5+WnRokXatGmTxWPoYWFhKlasmJydnc32yUidOnUUHBys7du3q3jx4un2K1SokE6fPm0x7vHjxy1qT090dHSmagKQeVxXQM7imsLzwsbGJksvWctWMPXdd99p0aJFev311/XFF19o+vTpZmtJuLm5qVatWvr555+fyWBq/PjxKl26tK5fv6758+dr586dsrOzM+tjbW2tXr16qVevXrp69ap2796t77//XuHh4erZs6fZ2h6PW8mSJdWiRQutXr1aSUlJsrGxMawWAMCjl/qIeWxsrAoUKGD6nKpAgQKSJGdnZ7Ntv/32myIjIzV06FCLfTKS+gh73rx5M9yvSpUq2rNnj4oUKWL2mOA///wjBwcH1alTJ9238iUmJio6Olpubm4WfwcDeDhcV0DO4poCMpatYGrevHmqVKmSvvnmG1lZWaU5Tb9UqVLatGlTdg7zxPLz8zOtzxQYGKhmzZqpV69e2rdvn/Lly2fR39nZWS1atFCLFi3UsmVL7dixQ2fOnDE99mCEIkWKKDExUXFxcXJ0dDSsDgDAo5c6pbp06dLavHmzoqKiVLp0adP2VatWydraWtWqVTObfr1y5UpJUufOndOcln3p0iWLF3rcuXNHS5YskYOD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/6hYsWL6448/5O7urokTJ6pz5845UuyjtmfPHjVs2FBHjhxRt27dNG7cOL3xxhuytrbWzJkzzfra29tr27Ztio6Othhn8eLFsre3T/c4KSkpWrp0qby9vbVhwwbduHHjoerduHGjfvjhB1lZWal48eIZ9v3+++81cOBAlStXTl999ZVq1KihYcOGadKkSQ91bADAkyX17xJXV1ezdnd3d1lbWytXrlxm7cOHD1dgYKBq166dI+P928qVK+Xr62sKpSTJx8dH9evX1/LlyzN3UgAAAHjmZSuYcnR0VPXq1ZU/f35TW1BQkHbt2qULFy5o79696t69e3ZrfGwmTJggR0dHbdq0SUOGDFHXrl01cuRILVu2TBs3bjTrW6tWLeXLl0/Lli0zaz979qx27dqll19+Od3jbNu2TWfPntXUqVN19+5drV69+qHq7dmzp86cOaMtW7aoYcOG6fa7deuWPv/8czVt2lQ//PCDunXrplmzZqlDhw4aN25chrOsAABPh5deekmS9M477+jQoUOKiorSsmXLNHfuXPXp00d58+Y19V2xYoX27t2b4YzmrIz3b8nJyTp69GiaM4Z9fX116tSph74pAwAAgGdLtoKpZ82pU6dUrly5NB9NKFy4sNlne3t7BQYGasmSJWbtS5culZOTkxo3bpzuccLCwlSuXDnVq1dPDRo0UFhY2EPV6+rqKgcHhwf227Ztm65evaqePXuatb/11luKi4vTzz///FDHBwA8OZo0aaIPP/xQW7ZsUb169VSpUiW9+eab6t27t4KDg039bt26pY8++khvv/22ihUrlu3x0nLt2jXdvn1bbm5uFtvc3d0lSRcuXHjIMwUAAMCzJEeCqcuXL2vu3LkaNmyYBgwYYNb+66+/pruw6pPGy8tLv//+u44dO5ap/u3bt9evv/5qtgB8WFiYWrVqZXq88d9u376tVatWqW3btpKktm3b6n//+1+ajwTmlEOHDkmSxZ3rqlWrytra2rQdAPB08/b2Vp06dTR58mT98MMPev311zVhwgR9++23pj5ff/217t69q/feey9HxktL6t/7uXPnttiW2va0/NsAAAAAj1a2Fj+X7i2oPXz4cCUkJCglJUVWVlaaMmWKJOnixYsKCAjQpEmT1LVr12wX+6gNGDBA7dq1U926deXn56fatWurfv36qlu3bppradSrV09u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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Lx5GqiD3H-qE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Feature Selection - Gradient Booster Regression"
      ],
      "metadata": {
        "id": "KdWznPATH_KD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.ensemble import GradientBoostingRegressor\n",
        "from sklearn.impute import SimpleImputer\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming DATA is your features DataFrame and STOCK['Close'] is your target variable\n",
        "X = DATA.drop(columns=['Date'])\n",
        "y = STOCK['Close']\n",
        "\n",
        "# Handle missing values by imputing with the mean\n",
        "imputer = SimpleImputer(strategy='mean')\n",
        "X = imputer.fit_transform(X)\n",
        "\n",
        "# Initialize the GBM model\n",
        "model = GradientBoostingRegressor(\n",
        "    loss='squared_error',\n",
        "    learning_rate=0.1,\n",
        "    n_estimators=100,\n",
        "    subsample=1.0,\n",
        "    criterion='friedman_mse',\n",
        "    min_samples_split=2,\n",
        "    min_samples_leaf=1,\n",
        "    min_weight_fraction_leaf=0.0,\n",
        "    max_depth=None,\n",
        "    min_impurity_decrease=0.0,\n",
        "    random_state=None,\n",
        "    max_features=None,\n",
        "    verbose=0,\n",
        "    warm_start=False\n",
        ")\n",
        "\n",
        "# Fit the model\n",
        "model.fit(X, y)\n",
        "\n",
        "# Feature Importance\n",
        "feature_importance = pd.DataFrame(model.feature_importances_, index=DATA.drop(columns=['Date']).columns, columns=['feature importance'])\n",
        "feature_importance = feature_importance.sort_values('feature importance', ascending=False)\n",
        "\n",
        "# Print feature importance\n",
        "print(feature_importance)\n",
        "\n",
        "# Visualization\n",
        "feature_importance.plot(kind='bar', color='lightpink')\n",
        "plt.title('Feature Importance in GBM')\n",
        "plt.ylabel('Importance')\n",
        "plt.xlabel('Features')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 890
        },
        "id": "stKhvQzRIC3E",
        "outputId": "85c15880-ef5e-4fd5-ebe7-7a4df250b87c"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                feature importance\n",
            "AMERIBOR                  0.579326\n",
            "SMA_10                    0.374900\n",
            "BBL_10_2.0                0.019779\n",
            "T10YIE                    0.008214\n",
            "OBV                       0.006570\n",
            "SP500                     0.003818\n",
            "BBP_10_2.0                0.003711\n",
            "RSI_15                    0.002474\n",
            "BAMLH0A0HYM2              0.000199\n",
            "T10Y3M                    0.000133\n",
            "Mkt-RF                    0.000128\n",
            "BAMLH0A0HYM2EY            0.000106\n",
            "DEXUSUK                   0.000095\n",
            "RF                        0.000094\n",
            "DAAA                      0.000087\n",
            "DEXUSEU                   0.000078\n",
            "T10Y2Y                    0.000061\n",
            "T5YIE                     0.000057\n",
            "DGS30                     0.000040\n",
            "RMW                       0.000032\n",
            "DBAA                      0.000025\n",
            "HML                       0.000023\n",
            "CMA                       0.000023\n",
            "SMB                       0.000022\n",
            "EFFR                      0.000005\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
